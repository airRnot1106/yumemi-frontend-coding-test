import{m as y,b as C,s as P,u as h,d as E,e as u,c as K}from"./cx-CjKSjrk3.js";const j=n=>({base:{},variants:{},defaultVariants:{},compoundVariants:[],...n});function M(n){const{base:f,variants:s,defaultVariants:e,compoundVariants:m}=j(n),i=t=>({...e,...C(t)});function r(t={}){var d;const a=i(t);let o={...f};for(const[l,V]of Object.entries(a))(d=s[l])!=null&&d[V]&&(o=u(o,s[l][V]));const c=A(m,a);return u(o,c)}function v(t){const a=j(t.config),o=h(t.variantKeys,Object.keys(s));return M({base:u(f,a.base),variants:Object.fromEntries(o.map(c=>[c,u(s[c],a.variants[c])])),defaultVariants:E(e,a.defaultVariants),compoundVariants:[...m,...a.compoundVariants]})}function p(t){return K(r(t))}const b=Object.keys(s);function O(t){return P(t,b)}const g=Object.fromEntries(Object.entries(s).map(([t,a])=>[t,Object.keys(a)]));return Object.assign(y(p),{__cva__:!0,variantMap:g,variantKeys:b,raw:r,config:n,merge:v,splitVariantProps:O,getVariantProps:i})}function A(n,f){let s={};return n.forEach(e=>{Object.entries(e).every(([i,r])=>i==="css"?!0:(Array.isArray(r)?r:[r]).some(p=>f[i]===p))&&(s=u(s,e.css))}),s}export{M as c};
